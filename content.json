{"meta":{"title":"吹神求杀的小站","subtitle":"嘿嘿","description":"","author":"吹神求杀","url":"https://zzxdzld.github.io/cdn","root":"/cdn/"},"pages":[],"posts":[{"title":"小度说书，不喜勿喷","slug":"小度说书","date":"2019-12-21T07:51:49.338Z","updated":"2019-12-21T08:11:13.062Z","comments":true,"path":"2019/12/21/小度说书/","link":"","permalink":"https://zzxdzld.github.io/cdn/2019/12/21/%E5%B0%8F%E5%BA%A6%E8%AF%B4%E4%B9%A6/","excerpt":"","text":"源代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566# 这个文件叫 reader.pyimport urllib3, sys, os, jsonfrom urllib.parse import urlencodefrom playsound import playsoundfrom PySide2.QtWidgets import *from ui_read import Ui_MainWindowimport getTokenclass Read(QMainWindow,Ui_MainWindow): def __init__(self): super().__init__() self.setupUi(self) self.file = None self.txt = None self.voice = 0 self.token = getToken.getToken() self.create.clicked.connect(self.generate) self.play.clicked.connect(self.musicPlay) self.open.clicked.connect(self.select_file) self.show() def select_file(self): self.file, _ = QFileDialog.getOpenFileName(self,'选择你要读取的文件',\"C:/\",\"Text files (*.log *.txt)\") if self.file: with open(self.file) as f: self.txt = f.read() self.textEdit.setText(self.txt) def generate(self): if self.choser.currentText(): if self.choser.currentText() == \"度逍遥\": self.voice = 3 elif self.choser.currentText() == \"度小娇\": self.voice = 5 elif self.choser.currentText() == \"度小宇\": self.voice = 1 elif self.choser.currentText() == \"度小美\": self.voice = 0 elif self.choser.currentText() == \"度博文\": self.voice = 106 elif self.choser.currentText() == \"度小萌\": self.voice = 111 elif self.choser.currentText() == \"度小童\": self.voice = 110 if not os.path.exists(\"temp\"): os.mkdir(\"temp\") self.txt = self.textEdit.toPlainText() if self.txt: http = urllib3.PoolManager() r = http.request('POST', \"http://tsn.baidu.com/text2audio?lan=zh&amp;ctp=1&amp;cuid=FE-1C-79-57-C2-60&amp;tok=%s&amp;tex=%s&amp;per=%s\" % (self.token, self.txt, self.voice)) result = r.data if not isinstance(result, dict): with open('temp/audio.mp3', 'wb') as f: f.write(result) QMessageBox.information(self,\"生成声音成功\",\"生成声音成功\") else: QMessageBox.warning(self,\"生成失败，请重试\",\"生成失败，请重试\") else: QMessageBox.warning(self,\"请先选择文件或输入内容！\",\"请先选择文件或输入内容！\") def musicPlay(self): playsound(\"temp/audio.mp3\")if __name__ == '__main__': app = QApplication(sys.argv) win = Read() win.show() sys.exit(app.exec_()) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122# 这个文件叫 ui_read.py# -*- coding: utf-8 -*-# Form implementation generated from reading ui file 'C:/Users/Zheng/Desktop/AI/reader/read.ui',# licensing of 'C:/Users/Zheng/Desktop/AI/reader/read.ui' applies.## Created: Sat Nov 30 19:28:13 2019# by: pyside2-uic running on PySide2 5.13.0## WARNING! All changes made in this file will be lost!from PySide2 import QtCore, QtGui, QtWidgetsclass Ui_MainWindow(object): def setupUi(self, MainWindow): MainWindow.setObjectName(\"MainWindow\") MainWindow.resize(800, 600) icon = QtGui.QIcon() icon.addPixmap(QtGui.QPixmap(\"read.ico\"), QtGui.QIcon.Normal, QtGui.QIcon.Off) MainWindow.setWindowIcon(icon) MainWindow.setAutoFillBackground(True) self.centralwidget = QtWidgets.QWidget(MainWindow) self.centralwidget.setObjectName(\"centralwidget\") self.label = QtWidgets.QLabel(self.centralwidget) self.label.setGeometry(QtCore.QRect(260, 10, 251, 101)) font = QtGui.QFont() font.setFamily(\"等线 Light\") font.setPointSize(48) self.label.setFont(font) self.label.setObjectName(\"label\") self.verticalLayoutWidget = QtWidgets.QWidget(self.centralwidget) self.verticalLayoutWidget.setGeometry(QtCore.QRect(60, 120, 704, 421)) self.verticalLayoutWidget.setObjectName(\"verticalLayoutWidget\") self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget) self.verticalLayout.setContentsMargins(0, 0, 0, 0) self.verticalLayout.setObjectName(\"verticalLayout\") self.textEdit = QtWidgets.QTextEdit(self.verticalLayoutWidget) font = QtGui.QFont() font.setFamily(\"黑体\") self.textEdit.setFont(font) self.textEdit.setObjectName(\"textEdit\") self.verticalLayout.addWidget(self.textEdit) self.horizontalLayout = QtWidgets.QHBoxLayout() self.horizontalLayout.setObjectName(\"horizontalLayout\") self.choser = QtWidgets.QComboBox(self.verticalLayoutWidget) font = QtGui.QFont() font.setFamily(\"等线 Light\") font.setPointSize(22) self.choser.setFont(font) self.choser.setObjectName(\"choser\") self.choser.addItem(\"\") self.choser.addItem(\"\") self.choser.addItem(\"\") self.choser.addItem(\"\") self.choser.addItem(\"\") self.choser.addItem(\"\") self.choser.addItem(\"\") self.horizontalLayout.addWidget(self.choser) self.open = QtWidgets.QPushButton(self.verticalLayoutWidget) font = QtGui.QFont() font.setFamily(\"等线 Light\") font.setPointSize(22) self.open.setFont(font) self.open.setObjectName(\"open\") self.horizontalLayout.addWidget(self.open) self.create = QtWidgets.QPushButton(self.verticalLayoutWidget) font = QtGui.QFont() font.setFamily(\"等线 Light\") font.setPointSize(22) self.create.setFont(font) self.create.setObjectName(\"create\") self.horizontalLayout.addWidget(self.create) self.play = QtWidgets.QPushButton(self.verticalLayoutWidget) font = QtGui.QFont() font.setFamily(\"等线 Light\") font.setPointSize(22) self.play.setFont(font) self.play.setObjectName(\"play\") self.horizontalLayout.addWidget(self.play) self.verticalLayout.addLayout(self.horizontalLayout) MainWindow.setCentralWidget(self.centralwidget) self.menubar = QtWidgets.QMenuBar(MainWindow) self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 23)) self.menubar.setObjectName(\"menubar\") self.menu = QtWidgets.QMenu(self.menubar) self.menu.setObjectName(\"menu\") self.menu_2 = QtWidgets.QMenu(self.menubar) self.menu_2.setObjectName(\"menu_2\") MainWindow.setMenuBar(self.menubar) self.statusbar = QtWidgets.QStatusBar(MainWindow) self.statusbar.setObjectName(\"statusbar\") MainWindow.setStatusBar(self.statusbar) self.actionOpen = QtWidgets.QAction(MainWindow) self.actionOpen.setObjectName(\"actionOpen\") self.actionweb = QtWidgets.QAction(MainWindow) self.actionweb.setObjectName(\"actionweb\") self.menu.addAction(self.actionOpen) self.menu_2.addAction(self.actionweb) self.menubar.addAction(self.menu.menuAction()) self.menubar.addAction(self.menu_2.menuAction()) self.retranslateUi(MainWindow) QtCore.QMetaObject.connectSlotsByName(MainWindow) def retranslateUi(self, MainWindow): MainWindow.setWindowTitle(QtWidgets.QApplication.translate(\"MainWindow\", \"小度说书\", None, -1)) self.label.setText(QtWidgets.QApplication.translate(\"MainWindow\", \"小度说书\", None, -1)) self.textEdit.setPlaceholderText(QtWidgets.QApplication.translate(\"MainWindow\", \"请键入……\", None, -1)) self.choser.setItemText(0, QtWidgets.QApplication.translate(\"MainWindow\", \"度逍遥\", None, -1)) self.choser.setItemText(1, QtWidgets.QApplication.translate(\"MainWindow\", \"度博文\", None, -1)) self.choser.setItemText(2, QtWidgets.QApplication.translate(\"MainWindow\", \"度小童\", None, -1)) self.choser.setItemText(3, QtWidgets.QApplication.translate(\"MainWindow\", \"度丫丫\", None, -1)) self.choser.setItemText(4, QtWidgets.QApplication.translate(\"MainWindow\", \"度小美\", None, -1)) self.choser.setItemText(5, QtWidgets.QApplication.translate(\"MainWindow\", \"度小宇\", None, -1)) self.choser.setItemText(6, QtWidgets.QApplication.translate(\"MainWindow\", \"度小萌\", None, -1)) self.open.setText(QtWidgets.QApplication.translate(\"MainWindow\", \"导入文本文件\", None, -1)) self.create.setText(QtWidgets.QApplication.translate(\"MainWindow\", \"生成语音\", None, -1)) self.play.setText(QtWidgets.QApplication.translate(\"MainWindow\", \"播放生成的语音\", None, -1)) self.menu.setTitle(QtWidgets.QApplication.translate(\"MainWindow\", \"文件\", None, -1)) self.menu_2.setTitle(QtWidgets.QApplication.translate(\"MainWindow\", \"关于\", None, -1)) self.actionOpen.setText(QtWidgets.QApplication.translate(\"MainWindow\", \"打开\", None, -1)) self.actionweb.setText(QtWidgets.QApplication.translate(\"MainWindow\", \"作者网站\", None, -1)) 1234567#这是 getToken.pydef getToken(): import urllib3, json http = urllib3.PoolManager() r = http.request('GET', 'https://openapi.baidu.com/oauth/2.0/token?grant_type=client_credentials&amp;client_id=YCMSAhotdtVVKgeabGEeHI7V&amp;client_secret=yGYtfbOCHEdGO3cjuex7U8zSvPyUPIuu') a = json.loads(r.data) return a['access_token']","categories":[],"tags":[]}]}